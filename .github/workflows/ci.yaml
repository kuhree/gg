name: Pipeline

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        go-version: [ '1.23.3', '1.23.x' ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: install deps
        run: go mod download

      - name: lint
        run: gofmt -s -l ./..

      - name: Test with Go
        run: go test -json ./... > TestResults-${{ matrix.go-version }}.json
      - name: upload test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults-${{ matrix.go-version }}
          path: TestResults-${{ matrix.go-version }}.json

      - name: build
        run: go build -o out/ -v ./...

  docker:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image_tags: ${{ steps.meta.outputs.tags || steps.meta-pr.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup environment
        run: |
          echo "OWNER_LOWERCASE=${GITHUB_REPOSITORY_OWNER,,}" >> ${GITHUB_ENV}

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v5.0.0

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Login to Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: git.littlevibe.net
          username: ${{ github.actor }}
          password: ${{ secrets.LITTLEVIBE_ACCESS_TOKEN }}

      - name: Configure Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: git.littlevibe.net/${{ env.OWNER_LOWERCASE }}/public
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=sha-${{ env.GITHUB_SHA_SHORT }}
          labels: |
            maintainer=${{ github.repository_owner }}
            org.opencontainers.image.source="https://git.littlevibe.net/${{ github.repository_owner }}/public"

      - name: Build and Push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            GIT_SHA=${{ env.GITHUB_SHA }}
            DOCKER_LABEL=sha-${{ env.GITHUB_SHA_SHORT }}

      - name: Notify Build Status
        if: always()
        run: |
          STATUS_EMOJI="${{ job.status == 'success' && '✅' || '❌' }}"
          STATUS_TEXT="${{ job.status == 'success' && 'white_checkmark' || 'x' }}"

          curl \
            -H "Authorization: Bearer ${{ secrets.NTFY_API_TOKEN }}" \
            -H "Title: Docker Build: $STATUS_EMOJI" \
            -H "Tags: whale,cd,${STATUS_TEXT}" \
            -H "Priority: ${{ job.status == 'success' && '3' || '5' }}" \
            -H "Click: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            -H "Markdown: yes" \
            -d "### Build Details
            - **Repository**: \`${{ github.repository }}\`
            - **Branch/Tag**: \`${{ github.ref_name }}\`
            - **Commit**: [\`${GITHUB_SHA:0:7}\`](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
            - **Image Tags**: \`${{ steps.meta.outputs.tags }}\`

            ${STATUS_EMOJI} Build **${{ job.status }}**

            [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [View Container](${{ github.server_url }}/${{ env.OWNER_LOWERCASE }}/-/packages/container/${{ github.repository }})" \
            ${{ secrets.NTFY_URL }}
